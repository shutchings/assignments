#include <stdio.h>
#include <stdint.h>
#include <stdlib.h>
#include <sys/syscall.h> 
#include <unistd.h>

struct elt {
  char val;
  struct elt *link;
};

enum format_t {
  OCT = 66, BIN, HEX
};

unsigned long byte_sort (unsigned long arg);
unsigned long nibble_sort (unsigned long arg);
struct elt *name_list (void);
void convert (enum format_t mode, unsigned long value);
void draw_me (void);

int main(int argc, char* argv[]) {

	unsigned long result = 0;

	// Test byte_sort
	result = byte_sort(0x0706050403020100);
	printf("0x%016lx\n", result);
	result = byte_sort(0x0403deadbeef0201);
	printf("0x%016lx\n", result);
	result = byte_sort(0x0001020304050607);
	printf("0x%016lx\n", result);

	// Test nibble_sort
	result = nibble_sort(0xfedcba9876543210);
	printf("0x%016lx\n", result);	
	result = nibble_sort(0x0403deadbeef0201);
	printf("0x%016lx\n", result);

	// Test name_list
	struct elt * name = name_list();
	printf("%c%c%c%c%c%c\n", name->val, name->link->val, name->link->link->val,
		   name->link->link->link->val, name->link->link->link->link->val,
		   name->link->link->link->link->link->val);

	// Test Convert
	convert(HEX, 0xdeadbeef);
	convert(BIN, 0x0123456789abcdef);	
	convert(BIN, 0xabcdef);
	convert(BIN, 0xfedcba987);
	convert(OCT, 0xdeadbeef);
	convert(OCT, 0xFFFFFFFFFFFFFFFF);
	convert(OCT, 0xFFFFFFFFFFFFFFF);	

	// Test draw_me
	draw_me();

	return 0;
}
